'use strict';
var __assign =
  (this && this.__assign) ||
  function () {
    __assign =
      Object.assign ||
      function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
    return __assign.apply(this, arguments);
  };
exports.__esModule = true;
var fs = require('fs');
var path_1 = require('path');
var util_1 = require('util');
var inDir = process.argv[2].split('=')[1];
var outDir = process.argv[3].split('=')[1];
var tokensPath = path_1['default'].resolve(__dirname, inDir);
var themePath = path_1['default'].resolve(__dirname, outDir);
fs.readFile(''.concat(tokensPath, '/tokens.json'), 'utf8', function (err, data) {
  var tokens = JSON.parse(data);
  var colors = Object.entries(tokens.colors).reduce(function (acc, _a) {
    var _b;
    var key = _a[0],
      obj = _a[1];
    return __assign(
      __assign({}, acc),
      ((_b = {}),
      (_b[key.split(' ').join('-').toLocaleLowerCase()] =
        'value' in obj
          ? obj.value
          : Object.entries(obj).reduce(function (nestedAcc, _a) {
              var _b;
              var nestedKey = _a[0],
                nestedObj = _a[1];
              return __assign(
                __assign({}, nestedAcc),
                ((_b = {}),
                (_b[nestedKey.split(' ').join('-').toLocaleLowerCase()] = nestedObj.value),
                _b),
              );
            }, {})),
      _b),
    );
  }, {});
  if (colors) {
    fs.writeFile(
      ''.concat(themePath, '/colors.ts'),
      "\n      // DO NOT MAKE CHANGES TO THIS FILE BY HAND\n      // THIS FILE IS AUTOMATICALLY GENERATED BY THE YARN THEME COMMAND\n      import { ChakraTheme } from '@chakra-ui/react';\n      export const colors: ChakraTheme['colors']  = ".concat(
        util_1['default'].inspect(colors, false, 2, false),
      ),
      function (err) {
        console.log(
          err
            ? 'Whoops... Something went wrong with generating the colors: '.concat(err)
            : 'Successfully converted color design tokens!',
        );
      },
    );
  }
});
